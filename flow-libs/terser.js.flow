// @flow

// Derived from documentation and source of
// Terser JS: https://github.com/terser-js/terser

// TypeScript definitions exist at
// https://github.com/terser-js/terser/blob/ab6e5cbe022e55546f65da225691c94a48d86c18/tools/terser.d.ts

declare module 'terser' {
  declare type ECMAVersion = 5 | 6 | 7 | 8 | 9;

  declare type CompressOptions =
    | boolean
    | {|
        arrows?: boolean,
        arguments?: boolean,
        booleans?: boolean,
        booleans_as_integers?: boolean,
        collapse_vars?: boolean,
        comparisons?: boolean,
        computed_props?: boolean,
        conditionals?: boolean,
        dead_code?: boolean,
        defaults?: boolean,
        directives?: boolean,
        drop_console?: boolean,
        drop_debugger?: boolean,
        ecma?: ECMAVersion,
        evaluate?: boolean,
        expression?: boolean,
        global_defs?: {[string]: string, ...},
        hoist_funs?: boolean,
        hoist_props?: boolean,
        hoist_vars?: boolean,
        if_return?: boolean,
        inline?: boolean | 0 | 1 | 2 | 3,
        join_vars?: boolean,
        keep_classnames?: boolean,
        keep_fargs?: boolean,
        keep_fnames?: boolean,
        keep_infinity?: boolean,
        loops?: boolean,
        module?: boolean,
        negate_iife?: boolean,
        passes?: number,
        properties?: boolean,
        pure_funcs?: ?Array<string>,
        pure_getters?: boolean | 'strict',
        reduce_funcs?: boolean,
        reduce_vars?: boolean,
        sequences?: boolean,
        side_effects?: boolean,
        switches?: boolean,
        toplevel?: boolean,
        top_retain?:
          | null
          | Array<string>
          | string
          | RegExp
          | (() => null | Array<string> | string | RegExp),
        typeofs?: boolean,
        unsafe?: boolean,
        unsafe_arrows?: boolean,
        unsafe_comps?: boolean,
        unsafe_Function?: boolean,
        unsafe_math?: boolean,
        unsafe_methods?: boolean,
        unsafe_proto?: boolean,
        unsafe_regexp?: boolean,
        unsafe_undefined?: boolean,
        unused?: boolean,
        warnings?: boolean,
      |};

  declare type MangleOptions =
    | boolean
    | {|
        eval?: boolean,
        keep_classnames?: boolean,
        keep_fnames?: boolean,
        module?: boolean,
        reserved?: Array<string>,
        safari10?: boolean,
        toplevel?: boolean,
        properties?:
          | boolean
          | {|
              builtins?: boolean,
              debug?: boolean,
              keep_quoted?: boolean | 'strict',
              regex?: ?RegExp,
              reserved?: Array<string>,
            |},
      |};

  declare type OutputOptions = {|
    ascii_only?: boolean,
    beautify?: boolean,
    brances?: boolean,
    comments?:
      | boolean
      | 'all'
      | 'some'
      | RegExp
      | (() => boolean | 'all' | 'some' | RegExp),
    ecma?: ECMAVersion,
    indent_level?: number,
    indent_start?: number,
    inline_script?: boolean,
    keep_quoted_props?: boolean,
    max_line_len?: boolean,
    preamble?: string,
    quote_keys?: boolean,
    quote_style?: 0 | 1 | 2 | 3,
    safari10?: boolean,
    semicolons?: boolean,
    shebang?: boolean,
    webkit?: boolean,
    wrap_iife?: boolean,
  |};

  declare type ParseOptions = {|
    bare_returns?: boolean,
    ecma?: ECMAVersion,
    html5_comments?: boolean,
    shebang?: boolean,
  |};

  declare type SourceMapOptions = {|
    filename?: string,
    url?: string,
    content?: any,
    root?: string,
    asObject?: boolean,
  |};

  declare type MinifyOptions = {|
    compress?: CompressOptions,
    ecma?: ECMAVersion,
    keep_classnames?: boolean,
    keep_fnames?: boolean,
    ie8?: boolean,
    mangle?: MangleOptions,
    module?: boolean,
    output?: ?OutputOptions,
    parse?: ParseOptions,
    nameCache?: ?{[string]: string, ...},
    safari10?: boolean,
    toplevel?: boolean,
    warnings?: boolean,
    sourceMap?: false | SourceMapOptions,
  |};

  declare type RawSourceMap = {|
    +version: number,
    +sources: string[],
    +names: string[],
    +sourceRoot?: string,
    +sourcesContent?: string[],
    +mappings: string,
    +file: string,
  |};

  declare module.exports: {
    minify(
      source: string,
      options?: MinifyOptions,
    ): Promise<{|code?: string, error?: Error, map?: string | RawSourceMap|}>,
    ...
  };
}
